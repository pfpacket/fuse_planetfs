#
# concept.txt
#

== Motivation ==
 Expressing resources as files is one of the most important Unix philosophy.
But through the evolution of Unix and Unix-like operating systems, a lot of
technologies, serviecs and resources have not been represented as files.
Network is not an exception. Programming and end user interface to network
is specialized for network, not through filesystem. I think the network interface
to programmer and end users should be integrated to the filesystem namespace.
 This problem is solved by Plan 9, a free software distributed operating system.
Plan 9 solved it by providing file interface to network. It maps network to the
filesystem namespace. Anything related to access to network such as accessing NICs,
connecting to the remote hosts, establishing servers is provided through files.
 This project, fuse_planetfs, is a filesystem which implements the idea on Linux.
It uses FUSE (Filesystem in Userspace) to provide its filesystem interface to
userspace.
 The name, planet, comes from 'plan 9 net'.
    +---------+
    |plan nine|
    |    n    | ==> planet
    |    e    |
    |    t    |
    +---------+


== Basic concept ==
 As mentioned above, we provide filesystem interface to network through files.
So planetfs is mounted at /net and has /net/tcp/, /net/dns or something like that.
For example, /net/dns provides DNS service. It is a file and readable and writeable.
To request name resolving of 'www.example.com' simply open and write the request to
/net/dns and then read it to get the result. See list.1

    char buf[1024];
    int fd = open("/net/dns", O_RDWR), ret;
    const char *request = "resolve www.example.com";
    write(fd, request, strlen(request));
    while ((ret = read(fd, buf, sizeof buf)) > 0)
        printf("%s", buf);

       list.1 sample code using DNS service

to be continued...
